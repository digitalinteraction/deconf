# kubectl create configmap peering-in-resources --from-file=app-config.json

apiVersion: apps/v1
kind: Deployment
metadata:
  name: peering-in
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: peering-in
  template:
    metadata:
      labels:
        app.kubernetes.io/name: peering-in
    spec:
      containers:
        - name: app
          image: robbj/peering-in:0.1.6
          ports:
            - containerPort: 8080
          readinessProbe:
            tcpSocket: { port: 8080 }
          livenessProbe:
            httpGet: { port: 8080, path: /healthz }
          volumeMounts:
            - mountPath: /app/app-config.json
              name: resources
              subPath: app-config.json
      volumes:
        - name: resources
          configMap:
            name: peering-in-resources
---
apiVersion: v1
kind: Service
metadata:
  name: peering-in
  namespace: default
spec:
  selector:
    app.kubernetes.io/name: peering-in
  ports:
    - port: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: peering-in
  namespace: default
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    ingress.kubernetes.io/ssl-redirect: 'true'
spec:
  ingressClassName: nginx
  rules:
    - host: peering-in.openlab.dev
      http:
        paths:
          - pathType: Prefix
            path: '/'
            backend:
              service:
                name: peering-in
                port:
                  number: 8080
  tls:
    - hosts:
        - peering-in.openlab.dev
      secretName: peering-in.openlab.dev
